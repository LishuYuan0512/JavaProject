package project;

/**
 *
 * @author tangy
 */
import java.sql.*;
import java.util.*;
import java.util.ArrayList;
import java.sql.PreparedStatement;

public class FoodItemDaoImpl  {
  

    public FoodItemDaoImpl() {
       
    }
    
    public List<FoodItem> getAllFoodItems() throws SQLException {
        Connection con = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
    ArrayList<FoodItem> foodItems = null;
    
    try {
            DataSource ds = new DataSource();
            con = ds.createConnection();
            pstmt = con.prepareStatement(
                    "SELECT * FROM fooditems");
            rs = pstmt.executeQuery();
            foodItems = new ArrayList<FoodItem>();
          
        while (rs.next()) {
            FoodItem foodItem = new FoodItem();
            foodItem.setItemID(rs.getInt("itemID"));
            foodItem.setUserID(rs.getInt("userID"));
            foodItem.setItemName(rs.getString("itemName"));
            foodItem.setQuantity(rs.getInt("quantity"));
            foodItem.setRestockTime(rs.getTimestamp("restockTime"));
            foodItem.setExpirationDate(rs.getTimestamp("expirationDate"));
            foodItem.setPrice(rs.getDouble("price"));
            foodItem.setPriceTypeID(rs.getInt("priceTypeID"));
            foodItems.add(foodItem);
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    finally {
            try {
                if (rs != null) {
                    rs.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
            try {
                if (pstmt != null) {
                    pstmt.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
            try {
                if (con != null) {
                    con.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    return foodItems;
}
       public void addFoodItem(FoodItem foodItem) {
        Connection con = null;
        PreparedStatement stmt = null;
        try {
            DataSource ds = new DataSource();
            con = ds.createConnection();
            // do not insert AuthorID, it is generated by Database
            stmt = con.prepareStatement("INSERT INTO FoodItems (userID, itemName, quantity, restockTime, expirationDate, price, priceTypeID) VALUES (?, ?, ?, ?, ?, ?, ?)");
            stmt.setInt(1, foodItem.getUserID());
            stmt.setString(2, foodItem.getItemName());
            stmt.setInt(3, foodItem.getQuantity());
            stmt.setTimestamp(4, new Timestamp(foodItem.getRestockTime().getTime()));
            stmt.setTimestamp(5, new Timestamp(foodItem.getExpirationDate().getTime()));
            stmt.setDouble(6, foodItem.getPrice());
            stmt.setInt(7, foodItem.getPriceTypeID());
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
            try {
                if (con != null) {
                    con.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }



//    @Override
//    public FoodItem getFoodItem(int itemID) {
//        FoodItem foodItem = null;
//        String query = "SELECT * FROM FoodItems WHERE itemID = ?";
//        try (Connection conn = dataSource.createConnection();
//             PreparedStatement stmt = conn.prepareStatement(query)) {
//            stmt.setInt(1, itemID);
//            ResultSet rs = stmt.executeQuery();
//            if (rs.next()) {
//                foodItem = new FoodItem();
//                foodItem.setItemID(rs.getInt("itemID"));
//                foodItem.setUserID(rs.getInt("userID"));
//                foodItem.setItemName(rs.getString("itemName"));
//                foodItem.setQuantity(rs.getInt("quantity"));
//                foodItem.setRestockTime(rs.getTimestamp("restockTime"));
//                foodItem.setExpirationDate(rs.getTimestamp("expirationDate"));
//                foodItem.setPrice(rs.getDouble("price"));
//                foodItem.setPriceTypeID(rs.getInt("priceTypeID"));
//            }
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
//        return foodItem;
//    }
//

//
//    @Override
//    public void updateFoodItem(FoodItem foodItem) {
//        String query = "UPDATE FoodItems SET userID = ?, itemName = ?, quantity = ?, restockTime = ?, expirationDate = ?, price = ?, priceTypeID = ? WHERE itemID = ?";
//        try (Connection conn = dataSource.createConnection();
//             PreparedStatement stmt = conn.prepareStatement(query)) {
//            stmt.setInt(1, foodItem.getUserID());
//            stmt.setString(2, foodItem.getItemName());
//            stmt.setInt(3, foodItem.getQuantity());
//            stmt.setTimestamp(4, new Timestamp(foodItem.getRestockTime().getTime()));
//            stmt.setTimestamp(5, new Timestamp(foodItem.getExpirationDate().getTime()));
//            stmt.setDouble(6, foodItem.getPrice());
//            stmt.setInt(7, foodItem.getPriceTypeID());
//            stmt.setInt(8, foodItem.getItemID());
//            stmt.executeUpdate();
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
//    }
//
//    @Override
//    public void deleteFoodItem(int itemID) {
//        String query = "DELETE FROM FoodItems WHERE itemID = ?";
//        try (Connection conn = dataSource.createConnection();
//             PreparedStatement stmt = conn.prepareStatement(query)) {
//            stmt.setInt(1, itemID);
//            stmt.executeUpdate();
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
//    }



}
